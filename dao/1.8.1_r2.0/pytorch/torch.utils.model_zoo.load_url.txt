merge (: framework {name: "pytorch", version: "1.8.1"});
merge (: module {framework: "pytorch", name: "torch", version: "1.8.1"});
match
 (m1: framework {name: "pytorch", version: "1.8.1"}),
 (m2: module {framework: "pytorch", name: "torch", version: "1.8.1"})
merge (m1) -[: classOfFramework {name: "torch"}]-> (m2);
merge (: module {framework: "pytorch", name: "utils", version: "1.8.1"});
match
 (m1: module {framework: "pytorch", name: "torch", version: "1.8.1"}),
 (m2: module {framework: "pytorch", name: "utils", version: "1.8.1"})
merge (m1) -[: subClassOfClass {name: "utils"}]-> (m2);
merge (: module {framework: "pytorch", name: "model_zoo", version: "1.8.1"});
match
 (m1: module {framework: "pytorch", name: "utils", version: "1.8.1"}),
 (m2: module {framework: "pytorch", name: "model_zoo", version: "1.8.1"})
merge (m1) -[: subClassOfClass {name: "model_zoo"}]-> (m2);
merge (: operator {framework: "pytorch", name: "load_url", full_name: "torch.utils.model_zoo.load_url", version: "1.8.1"});
match
 (m3: module {framework: "pytorch", name: "model_zoo", version: "1.8.1"}),
 (m4: operator {framework: "pytorch", name: "load_url", full_name: "torch.utils.model_zoo.load_url", version: "1.8.1"})
merge (m3) -[: operatorOfClass {name: "load_url"}]-> (m4);
merge (: parameter {framework: "pytorch", version: "1.8.1", operator: "torch.utils.model_zoo.load_url", parameter_order: 1, name: "url", dtype_num: 1, dtype: " string ", optional: "False", default: ""});
merge (: childParameter  { framework: "pytorch", version: "1.8.1", operator: "torch.utils.model_zoo.load_url", dtype_order: 1, parameter_order: 1, name: "url_1", dtype : " string ", default : ""});
merge (: parameter {framework: "pytorch", version: "1.8.1", operator: "torch.utils.model_zoo.load_url", parameter_order: 2, name: "model_dir", dtype_num: 1, dtype: "string", optional: "False", default: ""});
merge (: childParameter  { framework: "pytorch", version: "1.8.1", operator: "torch.utils.model_zoo.load_url", dtype_order: 1, parameter_order: 2, name: "model_dir_1", dtype : "string", default : ""});
merge (: parameter {framework: "pytorch", version: "1.8.1", operator: "torch.utils.model_zoo.load_url", parameter_order: 3, name: "map_location", dtype_num: 1, dtype: "", optional: "False", default: ""});
merge (: childParameter  { framework: "pytorch", version: "1.8.1", operator: "torch.utils.model_zoo.load_url", dtype_order: 1, parameter_order: 3, name: "map_location_1", dtype : "", default : ""});
merge (: parameter {framework: "pytorch", version: "1.8.1", operator: "torch.utils.model_zoo.load_url", parameter_order: 4, name: "progress", dtype_num: 1, dtype: "bool", optional: "False", default: "True"});
merge (: childParameter  { framework: "pytorch", version: "1.8.1", operator: "torch.utils.model_zoo.load_url", dtype_order: 1, parameter_order: 4, name: "progress_1", dtype : "bool", default : "True"});
merge (: parameter {framework: "pytorch", version: "1.8.1", operator: "torch.utils.model_zoo.load_url", parameter_order: 5, name: "check_hash", dtype_num: 1, dtype: "bool", optional: "False", default: "False"});
merge (: childParameter  { framework: "pytorch", version: "1.8.1", operator: "torch.utils.model_zoo.load_url", dtype_order: 1, parameter_order: 5, name: "check_hash_1", dtype : "bool", default : "False"});
merge (: parameter {framework: "pytorch", version: "1.8.1", operator: "torch.utils.model_zoo.load_url", parameter_order: 6, name: "file_name", dtype_num: 1, dtype: "string", optional: "False", default: ""});
merge (: childParameter  { framework: "pytorch", version: "1.8.1", operator: "torch.utils.model_zoo.load_url", dtype_order: 1, parameter_order: 6, name: "file_name_1", dtype : "string", default : ""});
merge (: return {framework: "pytorch", version: "1.8.1", operator: "torch.utils.model_zoo.load_url", return_order: 1, name: "return", dtype: 0});
match
 (m11: operator {framework: "pytorch", full_name: "torch.utils.model_zoo.load_url", version: "1.8.1"}),
 (n11: parameter)
where n11.operator = 'torch.utils.model_zoo.load_url' and n11.framework = 'pytorch' and n11.version = '1.8.1'
merge (m11) -[: parameterOfOperator {parameter_order: n11.parameter_order, name: n11.name}] -> (n11);
match
 (m11: operator {framework: "pytorch", full_name: "torch.utils.model_zoo.load_url", version: "1.8.1"}),
 (n11: input)
where n11.operator = 'torch.utils.model_zoo.load_url' and n11.framework = 'pytorch' and n11.version = '1.8.1'
merge (m11) -[: inputOfOperator {input_order: n11.input_order, name: n11.name}] -> (n11);
match
 (m11: operator {framework: "pytorch", full_name: "torch.utils.model_zoo.load_url", version: "1.8.1"}),
 (n11: return)
where n11.operator = 'torch.utils.model_zoo.load_url' and n11.framework = 'pytorch' and n11.version = '1.8.1'
merge (m11) -[: returnOfOperator {return_order: n11.return_order, name: n11.name}] -> (n11);
match
 (m11: parameter {framework: "pytorch", version: "1.8.1"}),
 (n11: childParameter {framework: "pytorch", version: "1.8.1"})
where n11.operator = 'torch.utils.model_zoo.load_url' and m11.operator='torch.utils.model_zoo.load_url' and n11.parameter_order=m11.parameter_order
merge (m11) -[: oneOfParameter {dtype_order: n11.dtype_order, dtype: n11.dtype}] -> (n11);
match
 (m11: input {framework: "pytorch", version: "1.8.1"}),
 (n11: childInput {framework: "pytorch", version: "1.8.1"})
where n11.operator = 'torch.utils.model_zoo.load_url' and m11.operator='torch.utils.model_zoo.load_url' and n11.input_order=m11.input_order
merge (m11) -[: oneOfInput {dtype_order: n11.dtype_order, dtype: n11.dtype}] -> (n11);
match
 (m11: return {framework: "pytorch", version: "1.8.1"}),
 (n11: childReturn {framework: "pytorch", version: "1.8.1"})
where n11.operator = 'torch.utils.model_zoo.load_url' and m11.operator='torch.utils.model_zoo.load_url' and n11.return_order=m11.return_order
merge (m11) -[: oneOfReturn {dtype_order: n11.dtype_order, dtype: n11.dtype}] -> (n11);

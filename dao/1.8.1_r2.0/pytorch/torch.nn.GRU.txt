merge (: framework {name: "pytorch", version: "1.8.1"});
merge (: module {framework: "pytorch", name: "torch", version: "1.8.1"});
match
 (m1: framework {name: "pytorch", version: "1.8.1"}),
 (m2: module {framework: "pytorch", name: "torch", version: "1.8.1"})
merge (m1) -[: classOfFramework {name: "torch"}]-> (m2);
merge (: module {framework: "pytorch", name: "nn", version: "1.8.1"});
match
 (m1: module {framework: "pytorch", name: "torch", version: "1.8.1"}),
 (m2: module {framework: "pytorch", name: "nn", version: "1.8.1"})
merge (m1) -[: subClassOfClass {name: "nn"}]-> (m2);
merge (: operator {framework: "pytorch", name: "GRU", full_name: "torch.nn.GRU", version: "1.8.1"});
match
 (m3: module {framework: "pytorch", name: "nn", version: "1.8.1"}),
 (m4: operator {framework: "pytorch", name: "GRU", full_name: "torch.nn.GRU", version: "1.8.1"})
merge (m3) -[: operatorOfClass {name: "GRU"}]-> (m4);
merge (: parameter {framework: "pytorch", version: "1.8.1", operator: "torch.nn.GRU", parameter_order: 1, name: "input_size", dtype_num: 1, dtype: " ", optional: "False", default: ""});
merge (: childParameter  { framework: "pytorch", version: "1.8.1", operator: "torch.nn.GRU", dtype_order: 1, parameter_order: 1, name: "input_size_1", dtype : " ", default : ""});
merge (: parameter {framework: "pytorch", version: "1.8.1", operator: "torch.nn.GRU", parameter_order: 2, name: "hidden_size", dtype_num: 1, dtype: " ", optional: "False", default: ""});
merge (: childParameter  { framework: "pytorch", version: "1.8.1", operator: "torch.nn.GRU", dtype_order: 1, parameter_order: 2, name: "hidden_size_1", dtype : " ", default : ""});
merge (: parameter {framework: "pytorch", version: "1.8.1", operator: "torch.nn.GRU", parameter_order: 3, name: "num_layers", dtype_num: 1, dtype: " ", optional: "False", default: "1"});
merge (: childParameter  { framework: "pytorch", version: "1.8.1", operator: "torch.nn.GRU", dtype_order: 1, parameter_order: 3, name: "num_layers_1", dtype : " ", default : "1"});
merge (: parameter {framework: "pytorch", version: "1.8.1", operator: "torch.nn.GRU", parameter_order: 4, name: "bias", dtype_num: 1, dtype: " ", optional: "False", default: "True"});
merge (: childParameter  { framework: "pytorch", version: "1.8.1", operator: "torch.nn.GRU", dtype_order: 1, parameter_order: 4, name: "bias_1", dtype : " ", default : "True"});
merge (: parameter {framework: "pytorch", version: "1.8.1", operator: "torch.nn.GRU", parameter_order: 5, name: "batch_first", dtype_num: 1, dtype: " ", optional: "False", default: "False"});
merge (: childParameter  { framework: "pytorch", version: "1.8.1", operator: "torch.nn.GRU", dtype_order: 1, parameter_order: 5, name: "batch_first_1", dtype : " ", default : "False"});
merge (: parameter {framework: "pytorch", version: "1.8.1", operator: "torch.nn.GRU", parameter_order: 6, name: "dropout", dtype_num: 1, dtype: " ", optional: "False", default: "0"});
merge (: childParameter  { framework: "pytorch", version: "1.8.1", operator: "torch.nn.GRU", dtype_order: 1, parameter_order: 6, name: "dropout_1", dtype : " ", default : "0"});
merge (: parameter {framework: "pytorch", version: "1.8.1", operator: "torch.nn.GRU", parameter_order: 7, name: "bidirectional", dtype_num: 1, dtype: " ", optional: "False", default: "False"});
merge (: childParameter  { framework: "pytorch", version: "1.8.1", operator: "torch.nn.GRU", dtype_order: 1, parameter_order: 7, name: "bidirectional_1", dtype : " ", default : "False"});
merge (: input {framework: "pytorch", version: "1.8.1", operator: "torch.nn.GRU", input_order: 1, name: "input", dtype_num: 1, dtype: " of shape seq_len, batch, input_size", optional: "False", default: "['']"});
merge (: childInput  { framework: "pytorch", version: "1.8.1", operator: "torch.nn.GRU", dtype_order: 1, inputs_order: 1, name: "input_1", dtype : " of shape seq_len, batch, input_size", default : "['']"});
merge (: input {framework: "pytorch", version: "1.8.1", operator: "torch.nn.GRU", input_order: 2, name: "h_0", dtype_num: 1, dtype: " of shape num_layers * num_directions, batch, hidden_size", optional: "False", default: "['']"});
merge (: childInput  { framework: "pytorch", version: "1.8.1", operator: "torch.nn.GRU", dtype_order: 1, inputs_order: 2, name: "h_0_1", dtype : " of shape num_layers * num_directions, batch, hidden_size", default : "['']"});
merge (: input {framework: "pytorch", version: "1.8.1", operator: "torch.nn.GRU", input_order: 3, name: "input", dtype_num: 1, dtype: " of shape seq_len, batch, input_size", optional: "False", default: "['']"});
merge (: childInput  { framework: "pytorch", version: "1.8.1", operator: "torch.nn.GRU", dtype_order: 1, inputs_order: 3, name: "input_1", dtype : " of shape seq_len, batch, input_size", default : "['']"});
merge (: input {framework: "pytorch", version: "1.8.1", operator: "torch.nn.GRU", input_order: 4, name: "h_0", dtype_num: 1, dtype: " of shape num_layers * num_directions, batch, hidden_size", optional: "False", default: "['']"});
merge (: childInput  { framework: "pytorch", version: "1.8.1", operator: "torch.nn.GRU", dtype_order: 1, inputs_order: 4, name: "h_0_1", dtype : " of shape num_layers * num_directions, batch, hidden_size", default : "['']"});
merge (: input {framework: "pytorch", version: "1.8.1", operator: "torch.nn.GRU", input_order: 5, name: "input", dtype_num: 1, dtype: " of shape seq_len, batch, input_size", optional: "False", default: "['']"});
merge (: childInput  { framework: "pytorch", version: "1.8.1", operator: "torch.nn.GRU", dtype_order: 1, inputs_order: 5, name: "input_1", dtype : " of shape seq_len, batch, input_size", default : "['']"});
merge (: input {framework: "pytorch", version: "1.8.1", operator: "torch.nn.GRU", input_order: 6, name: "h_0", dtype_num: 1, dtype: " of shape num_layers * num_directions, batch, hidden_size", optional: "False", default: "['']"});
merge (: childInput  { framework: "pytorch", version: "1.8.1", operator: "torch.nn.GRU", dtype_order: 1, inputs_order: 6, name: "h_0_1", dtype : " of shape num_layers * num_directions, batch, hidden_size", default : "['']"});
merge (: input {framework: "pytorch", version: "1.8.1", operator: "torch.nn.GRU", input_order: 7, name: "input", dtype_num: 1, dtype: " of shape seq_len, batch, input_size", optional: "False", default: "['']"});
merge (: childInput  { framework: "pytorch", version: "1.8.1", operator: "torch.nn.GRU", dtype_order: 1, inputs_order: 7, name: "input_1", dtype : " of shape seq_len, batch, input_size", default : "['']"});
merge (: input {framework: "pytorch", version: "1.8.1", operator: "torch.nn.GRU", input_order: 8, name: "h_0", dtype_num: 1, dtype: " of shape num_layers * num_directions, batch, hidden_size", optional: "False", default: "['']"});
merge (: childInput  { framework: "pytorch", version: "1.8.1", operator: "torch.nn.GRU", dtype_order: 1, inputs_order: 8, name: "h_0_1", dtype : " of shape num_layers * num_directions, batch, hidden_size", default : "['']"});
merge (: input {framework: "pytorch", version: "1.8.1", operator: "torch.nn.GRU", input_order: 9, name: "input", dtype_num: 1, dtype: " of shape seq_len, batch, input_size", optional: "False", default: "['']"});
merge (: childInput  { framework: "pytorch", version: "1.8.1", operator: "torch.nn.GRU", dtype_order: 1, inputs_order: 9, name: "input_1", dtype : " of shape seq_len, batch, input_size", default : "['']"});
merge (: input {framework: "pytorch", version: "1.8.1", operator: "torch.nn.GRU", input_order: 10, name: "h_0", dtype_num: 1, dtype: " of shape num_layers * num_directions, batch, hidden_size", optional: "False", default: "['']"});
merge (: childInput  { framework: "pytorch", version: "1.8.1", operator: "torch.nn.GRU", dtype_order: 1, inputs_order: 10, name: "h_0_1", dtype : " of shape num_layers * num_directions, batch, hidden_size", default : "['']"});
merge (: input {framework: "pytorch", version: "1.8.1", operator: "torch.nn.GRU", input_order: 11, name: "input", dtype_num: 1, dtype: " of shape seq_len, batch, input_size", optional: "False", default: "['']"});
merge (: childInput  { framework: "pytorch", version: "1.8.1", operator: "torch.nn.GRU", dtype_order: 1, inputs_order: 11, name: "input_1", dtype : " of shape seq_len, batch, input_size", default : "['']"});
merge (: input {framework: "pytorch", version: "1.8.1", operator: "torch.nn.GRU", input_order: 12, name: "h_0", dtype_num: 1, dtype: " of shape num_layers * num_directions, batch, hidden_size", optional: "False", default: "['']"});
merge (: childInput  { framework: "pytorch", version: "1.8.1", operator: "torch.nn.GRU", dtype_order: 1, inputs_order: 12, name: "h_0_1", dtype : " of shape num_layers * num_directions, batch, hidden_size", default : "['']"});
merge (: input {framework: "pytorch", version: "1.8.1", operator: "torch.nn.GRU", input_order: 13, name: "input", dtype_num: 1, dtype: " of shape seq_len, batch, input_size", optional: "False", default: "['']"});
merge (: childInput  { framework: "pytorch", version: "1.8.1", operator: "torch.nn.GRU", dtype_order: 1, inputs_order: 13, name: "input_1", dtype : " of shape seq_len, batch, input_size", default : "['']"});
merge (: input {framework: "pytorch", version: "1.8.1", operator: "torch.nn.GRU", input_order: 14, name: "h_0", dtype_num: 1, dtype: " of shape num_layers * num_directions, batch, hidden_size", optional: "False", default: "['']"});
merge (: childInput  { framework: "pytorch", version: "1.8.1", operator: "torch.nn.GRU", dtype_order: 1, inputs_order: 14, name: "h_0_1", dtype : " of shape num_layers * num_directions, batch, hidden_size", default : "['']"});
merge (: return {framework: "pytorch", version: "1.8.1", operator: "torch.nn.GRU", return_order: 1, name: "return", dtype: 0});
match
 (m11: operator {framework: "pytorch", full_name: "torch.nn.GRU", version: "1.8.1"}),
 (n11: parameter)
where n11.operator = 'torch.nn.GRU' and n11.framework = 'pytorch' and n11.version = '1.8.1'
merge (m11) -[: parameterOfOperator {parameter_order: n11.parameter_order, name: n11.name}] -> (n11);
match
 (m11: operator {framework: "pytorch", full_name: "torch.nn.GRU", version: "1.8.1"}),
 (n11: input)
where n11.operator = 'torch.nn.GRU' and n11.framework = 'pytorch' and n11.version = '1.8.1'
merge (m11) -[: inputOfOperator {input_order: n11.input_order, name: n11.name}] -> (n11);
match
 (m11: operator {framework: "pytorch", full_name: "torch.nn.GRU", version: "1.8.1"}),
 (n11: return)
where n11.operator = 'torch.nn.GRU' and n11.framework = 'pytorch' and n11.version = '1.8.1'
merge (m11) -[: returnOfOperator {return_order: n11.return_order, name: n11.name}] -> (n11);
match
 (m11: parameter {framework: "pytorch", version: "1.8.1"}),
 (n11: childParameter {framework: "pytorch", version: "1.8.1"})
where n11.operator = 'torch.nn.GRU' and m11.operator='torch.nn.GRU' and n11.parameter_order=m11.parameter_order
merge (m11) -[: oneOfParameter {dtype_order: n11.dtype_order, dtype: n11.dtype}] -> (n11);
match
 (m11: input {framework: "pytorch", version: "1.8.1"}),
 (n11: childInput {framework: "pytorch", version: "1.8.1"})
where n11.operator = 'torch.nn.GRU' and m11.operator='torch.nn.GRU' and n11.input_order=m11.input_order
merge (m11) -[: oneOfInput {dtype_order: n11.dtype_order, dtype: n11.dtype}] -> (n11);
match
 (m11: return {framework: "pytorch", version: "1.8.1"}),
 (n11: childReturn {framework: "pytorch", version: "1.8.1"})
where n11.operator = 'torch.nn.GRU' and m11.operator='torch.nn.GRU' and n11.return_order=m11.return_order
merge (m11) -[: oneOfReturn {dtype_order: n11.dtype_order, dtype: n11.dtype}] -> (n11);

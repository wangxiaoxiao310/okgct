merge (: framework {name: "mindspore", version: "2.0"});
merge (: module {framework: "mindspore", name: "mindspore", version: "2.0"});
match
 (m1: framework {name: "mindspore", version: "2.0"}),
 (m2: module {framework: "mindspore", name: "mindspore", version: "2.0"})
merge (m1) -[: classOfFramework {name: "mindspore"}]-> (m2);
merge (: module {framework: "mindspore", name: "dataset", version: "2.0"});
match
 (m1: module {framework: "mindspore", name: "mindspore", version: "2.0"}),
 (m2: module {framework: "mindspore", name: "dataset", version: "2.0"})
merge (m1) -[: subClassOfClass {name: "dataset"}]-> (m2);
merge (: module {framework: "mindspore", name: "audio", version: "2.0"});
match
 (m1: module {framework: "mindspore", name: "dataset", version: "2.0"}),
 (m2: module {framework: "mindspore", name: "audio", version: "2.0"})
merge (m1) -[: subClassOfClass {name: "audio"}]-> (m2);
merge (: operator {framework: "mindspore", name: "Vad", full_name: "mindspore.dataset.audio.Vad", version: "2.0"});
match
 (m3: module {framework: "mindspore", name: "audio", version: "2.0"}),
 (m4: operator {framework: "mindspore", name: "Vad", full_name: "mindspore.dataset.audio.Vad", version: "2.0"})
merge (m3) -[: operatorOfClass {name: "Vad"}]-> (m4);
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.dataset.audio.Vad", parameter_order: 1, name: "sample_rate", dtype_num: 1, dtype: "int", optional: "False", default: ""});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.dataset.audio.Vad", dtype_order: 1, parameter_order: 1, name: "sample_rate_1", dtype : "int", default : ""});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.dataset.audio.Vad", parameter_order: 2, name: "trigger_level", dtype_num: 1, dtype: "float", optional: "True", default: "7.0"});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.dataset.audio.Vad", dtype_order: 1, parameter_order: 2, name: "trigger_level_1", dtype : "float", default : "7.0"});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.dataset.audio.Vad", parameter_order: 3, name: "trigger_time", dtype_num: 1, dtype: "float", optional: "True", default: "0.25"});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.dataset.audio.Vad", dtype_order: 1, parameter_order: 3, name: "trigger_time_1", dtype : "float", default : "0.25"});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.dataset.audio.Vad", parameter_order: 4, name: "search_time", dtype_num: 1, dtype: "float", optional: "True", default: "1.0"});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.dataset.audio.Vad", dtype_order: 1, parameter_order: 4, name: "search_time_1", dtype : "float", default : "1.0"});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.dataset.audio.Vad", parameter_order: 5, name: "allowed_gap", dtype_num: 1, dtype: "float", optional: "True", default: "0.25"});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.dataset.audio.Vad", dtype_order: 1, parameter_order: 5, name: "allowed_gap_1", dtype : "float", default : "0.25"});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.dataset.audio.Vad", parameter_order: 6, name: "pre_trigger_time", dtype_num: 1, dtype: "float", optional: "True", default: "0.0"});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.dataset.audio.Vad", dtype_order: 1, parameter_order: 6, name: "pre_trigger_time_1", dtype : "float", default : "0.0"});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.dataset.audio.Vad", parameter_order: 7, name: "boot_time", dtype_num: 1, dtype: "float", optional: "True", default: "0.35"});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.dataset.audio.Vad", dtype_order: 1, parameter_order: 7, name: "boot_time_1", dtype : "float", default : "0.35"});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.dataset.audio.Vad", parameter_order: 8, name: "noise_up_time", dtype_num: 1, dtype: "float", optional: "True", default: "0.1"});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.dataset.audio.Vad", dtype_order: 1, parameter_order: 8, name: "noise_up_time_1", dtype : "float", default : "0.1"});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.dataset.audio.Vad", parameter_order: 9, name: "noise_down_time", dtype_num: 1, dtype: "float", optional: "True", default: "0.01"});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.dataset.audio.Vad", dtype_order: 1, parameter_order: 9, name: "noise_down_time_1", dtype : "float", default : "0.01"});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.dataset.audio.Vad", parameter_order: 10, name: "noise_reduction_amount", dtype_num: 1, dtype: "float", optional: "True", default: "1.35"});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.dataset.audio.Vad", dtype_order: 1, parameter_order: 10, name: "noise_reduction_amount_1", dtype : "float", default : "1.35"});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.dataset.audio.Vad", parameter_order: 11, name: "measure_freq", dtype_num: 1, dtype: "float", optional: "True", default: "20.0"});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.dataset.audio.Vad", dtype_order: 1, parameter_order: 11, name: "measure_freq_1", dtype : "float", default : "20.0"});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.dataset.audio.Vad", parameter_order: 12, name: "measure_duration", dtype_num: 1, dtype: "float", optional: "True", default: "None，将使用两倍测量周期的时长"});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.dataset.audio.Vad", dtype_order: 1, parameter_order: 12, name: "measure_duration_1", dtype : "float", default : "None，将使用两倍测量周期的时长"});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.dataset.audio.Vad", parameter_order: 13, name: "measure_smooth_time", dtype_num: 1, dtype: "float", optional: "True", default: "0.4"});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.dataset.audio.Vad", dtype_order: 1, parameter_order: 13, name: "measure_smooth_time_1", dtype : "float", default : "0.4"});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.dataset.audio.Vad", parameter_order: 14, name: "hp_filter_freq", dtype_num: 1, dtype: "float", optional: "True", default: "50.0"});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.dataset.audio.Vad", dtype_order: 1, parameter_order: 14, name: "hp_filter_freq_1", dtype : "float", default : "50.0"});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.dataset.audio.Vad", parameter_order: 15, name: "lp_filter_freq", dtype_num: 1, dtype: "float", optional: "True", default: "6000.0"});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.dataset.audio.Vad", dtype_order: 1, parameter_order: 15, name: "lp_filter_freq_1", dtype : "float", default : "6000.0"});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.dataset.audio.Vad", parameter_order: 16, name: "hp_lifter_freq", dtype_num: 1, dtype: "float", optional: "True", default: "150.0"});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.dataset.audio.Vad", dtype_order: 1, parameter_order: 16, name: "hp_lifter_freq_1", dtype : "float", default : "150.0"});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.dataset.audio.Vad", parameter_order: 17, name: "lp_lifter_freq", dtype_num: 1, dtype: "float", optional: "True", default: "2000.0"});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.dataset.audio.Vad", dtype_order: 1, parameter_order: 17, name: "lp_lifter_freq_1", dtype : "float", default : "2000.0"});
merge (: return {framework: "mindspore", version: "2.0", operator: "mindspore.dataset.audio.Vad", return_order: 1, name: "return", dtype: 0});
match
 (m11: operator {framework: "mindspore", full_name: "mindspore.dataset.audio.Vad", version: "2.0"}),
 (n11: parameter)
where n11.operator = 'mindspore.dataset.audio.Vad' and n11.framework = 'mindspore' and n11.version = '2.0'
merge (m11) -[: parameterOfOperator {parameter_order: n11.parameter_order, name: n11.name}] -> (n11);
match
 (m11: operator {framework: "mindspore", full_name: "mindspore.dataset.audio.Vad", version: "2.0"}),
 (n11: input)
where n11.operator = 'mindspore.dataset.audio.Vad' and n11.framework = 'mindspore' and n11.version = '2.0'
merge (m11) -[: inputOfOperator {input_order: n11.input_order, name: n11.name}] -> (n11);
match
 (m11: operator {framework: "mindspore", full_name: "mindspore.dataset.audio.Vad", version: "2.0"}),
 (n11: return)
where n11.operator = 'mindspore.dataset.audio.Vad' and n11.framework = 'mindspore' and n11.version = '2.0'
merge (m11) -[: returnOfOperator {return_order: n11.return_order, name: n11.name}] -> (n11);
match
 (m11: parameter {framework: "mindspore", version: "2.0"}),
 (n11: childParameter {framework: "mindspore", version: "2.0"})
where n11.operator = 'mindspore.dataset.audio.Vad' and m11.operator='mindspore.dataset.audio.Vad' and n11.parameter_order=m11.parameter_order
merge (m11) -[: oneOfParameter {dtype_order: n11.dtype_order, dtype: n11.dtype}] -> (n11);
match
 (m11: input {framework: "mindspore", version: "2.0"}),
 (n11: childInput {framework: "mindspore", version: "2.0"})
where n11.operator = 'mindspore.dataset.audio.Vad' and m11.operator='mindspore.dataset.audio.Vad' and n11.input_order=m11.input_order
merge (m11) -[: oneOfInput {dtype_order: n11.dtype_order, dtype: n11.dtype}] -> (n11);
match
 (m11: return {framework: "mindspore", version: "2.0"}),
 (n11: childReturn {framework: "mindspore", version: "2.0"})
where n11.operator = 'mindspore.dataset.audio.Vad' and m11.operator='mindspore.dataset.audio.Vad' and n11.return_order=m11.return_order
merge (m11) -[: oneOfReturn {dtype_order: n11.dtype_order, dtype: n11.dtype}] -> (n11);

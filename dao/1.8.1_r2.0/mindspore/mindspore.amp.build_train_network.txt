merge (: framework {name: "mindspore", version: "2.0"});
merge (: module {framework: "mindspore", name: "mindspore", version: "2.0"});
match
 (m1: framework {name: "mindspore", version: "2.0"}),
 (m2: module {framework: "mindspore", name: "mindspore", version: "2.0"})
merge (m1) -[: classOfFramework {name: "mindspore"}]-> (m2);
merge (: module {framework: "mindspore", name: "amp", version: "2.0"});
match
 (m1: module {framework: "mindspore", name: "mindspore", version: "2.0"}),
 (m2: module {framework: "mindspore", name: "amp", version: "2.0"})
merge (m1) -[: subClassOfClass {name: "amp"}]-> (m2);
merge (: operator {framework: "mindspore", name: "build_train_network", full_name: "mindspore.amp.build_train_network", version: "2.0"});
match
 (m3: module {framework: "mindspore", name: "amp", version: "2.0"}),
 (m4: operator {framework: "mindspore", name: "build_train_network", full_name: "mindspore.amp.build_train_network", version: "2.0"})
merge (m3) -[: operatorOfClass {name: "build_train_network"}]-> (m4);
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.amp.build_train_network", parameter_order: 1, name: "network", dtype_num: 1, dtype: "Cell", optional: "False", default: ""});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.amp.build_train_network", dtype_order: 1, parameter_order: 1, name: "network_1", dtype : "Cell", default : ""});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.amp.build_train_network", parameter_order: 2, name: "optimizer", dtype_num: 1, dtype: "Optimizer", optional: "False", default: ""});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.amp.build_train_network", dtype_order: 1, parameter_order: 2, name: "optimizer_1", dtype : "Optimizer", default : ""});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.amp.build_train_network", parameter_order: 3, name: "loss_fn", dtype_num: 1, dtype: "Union[None, Cell]", optional: "False", default: "None"});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.amp.build_train_network", dtype_order: 1, parameter_order: 3, name: "loss_fn_1", dtype : "Union[None, Cell]", default : "None"});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.amp.build_train_network", parameter_order: 4, name: "level", dtype_num: 1, dtype: "str", optional: "False", default: "O0"});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.amp.build_train_network", dtype_order: 1, parameter_order: 4, name: "level_1", dtype : "str", default : "O0"});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.amp.build_train_network", parameter_order: 5, name: "boost_level", dtype_num: 1, dtype: "str", optional: "False", default: "O0"});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.amp.build_train_network", dtype_order: 1, parameter_order: 5, name: "boost_level_1", dtype : "str", default : "O0"});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.amp.build_train_network", parameter_order: 6, name: "cast_model_type", dtype_num: 1, dtype: "mindspore.dtype", optional: "False", default: ""});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.amp.build_train_network", dtype_order: 1, parameter_order: 6, name: "cast_model_type_1", dtype : "mindspore.dtype", default : ""});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.amp.build_train_network", parameter_order: 7, name: "keep_batchnorm_fp32", dtype_num: 1, dtype: "bool", optional: "False", default: ""});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.amp.build_train_network", dtype_order: 1, parameter_order: 7, name: "keep_batchnorm_fp32_1", dtype : "bool", default : ""});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.amp.build_train_network", parameter_order: 8, name: "loss_scale_manager", dtype_num: 1, dtype: "Union[None, LossScaleManager]", optional: "False", default: ""});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.amp.build_train_network", dtype_order: 1, parameter_order: 8, name: "loss_scale_manager_1", dtype : "Union[None, LossScaleManager]", default : ""});
merge (: return {framework: "mindspore", version: "2.0", operator: "mindspore.amp.build_train_network", return_order: 1, name: "return", dtype: 0});
match
 (m11: operator {framework: "mindspore", full_name: "mindspore.amp.build_train_network", version: "2.0"}),
 (n11: parameter)
where n11.operator = 'mindspore.amp.build_train_network' and n11.framework = 'mindspore' and n11.version = '2.0'
merge (m11) -[: parameterOfOperator {parameter_order: n11.parameter_order, name: n11.name}] -> (n11);
match
 (m11: operator {framework: "mindspore", full_name: "mindspore.amp.build_train_network", version: "2.0"}),
 (n11: input)
where n11.operator = 'mindspore.amp.build_train_network' and n11.framework = 'mindspore' and n11.version = '2.0'
merge (m11) -[: inputOfOperator {input_order: n11.input_order, name: n11.name}] -> (n11);
match
 (m11: operator {framework: "mindspore", full_name: "mindspore.amp.build_train_network", version: "2.0"}),
 (n11: return)
where n11.operator = 'mindspore.amp.build_train_network' and n11.framework = 'mindspore' and n11.version = '2.0'
merge (m11) -[: returnOfOperator {return_order: n11.return_order, name: n11.name}] -> (n11);
match
 (m11: parameter {framework: "mindspore", version: "2.0"}),
 (n11: childParameter {framework: "mindspore", version: "2.0"})
where n11.operator = 'mindspore.amp.build_train_network' and m11.operator='mindspore.amp.build_train_network' and n11.parameter_order=m11.parameter_order
merge (m11) -[: oneOfParameter {dtype_order: n11.dtype_order, dtype: n11.dtype}] -> (n11);
match
 (m11: input {framework: "mindspore", version: "2.0"}),
 (n11: childInput {framework: "mindspore", version: "2.0"})
where n11.operator = 'mindspore.amp.build_train_network' and m11.operator='mindspore.amp.build_train_network' and n11.input_order=m11.input_order
merge (m11) -[: oneOfInput {dtype_order: n11.dtype_order, dtype: n11.dtype}] -> (n11);
match
 (m11: return {framework: "mindspore", version: "2.0"}),
 (n11: childReturn {framework: "mindspore", version: "2.0"})
where n11.operator = 'mindspore.amp.build_train_network' and m11.operator='mindspore.amp.build_train_network' and n11.return_order=m11.return_order
merge (m11) -[: oneOfReturn {dtype_order: n11.dtype_order, dtype: n11.dtype}] -> (n11);

merge (: framework {name: "mindspore", version: "2.0"});
merge (: module {framework: "mindspore", name: "mindspore", version: "2.0"});
match
 (m1: framework {name: "mindspore", version: "2.0"}),
 (m2: module {framework: "mindspore", name: "mindspore", version: "2.0"})
merge (m1) -[: classOfFramework {name: "mindspore"}]-> (m2);
merge (: module {framework: "mindspore", name: "nn", version: "2.0"});
match
 (m1: module {framework: "mindspore", name: "mindspore", version: "2.0"}),
 (m2: module {framework: "mindspore", name: "nn", version: "2.0"})
merge (m1) -[: subClassOfClass {name: "nn"}]-> (m2);
merge (: operator {framework: "mindspore", name: "ProximalAdagrad", full_name: "mindspore.nn.ProximalAdagrad", version: "2.0"});
match
 (m3: module {framework: "mindspore", name: "nn", version: "2.0"}),
 (m4: operator {framework: "mindspore", name: "ProximalAdagrad", full_name: "mindspore.nn.ProximalAdagrad", version: "2.0"})
merge (m3) -[: operatorOfClass {name: "ProximalAdagrad"}]-> (m4);
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.nn.ProximalAdagrad", parameter_order: 1, name: "params", dtype_num: 1, dtype: "Union[list[Parameter], list[dict]]", optional: "False", default: ""});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.nn.ProximalAdagrad", dtype_order: 1, parameter_order: 1, name: "params_1", dtype : "Union[list[Parameter], list[dict]]", default : ""});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.nn.ProximalAdagrad", parameter_order: 2, name: "accum", dtype_num: 1, dtype: "float", optional: "False", default: "0.1"});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.nn.ProximalAdagrad", dtype_order: 1, parameter_order: 2, name: "accum_1", dtype : "float", default : "0.1"});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.nn.ProximalAdagrad", parameter_order: 3, name: "learning_rate", dtype_num: 1, dtype: "Union[float, int, Tensor, Iterable, LearningRateSchedule]", optional: "False", default: "0.001"});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.nn.ProximalAdagrad", dtype_order: 1, parameter_order: 3, name: "learning_rate_1", dtype : "Union[float, int, Tensor, Iterable, LearningRateSchedule]", default : "0.001"});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.nn.ProximalAdagrad", parameter_order: 4, name: "l1", dtype_num: 1, dtype: "float", optional: "False", default: "0.0"});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.nn.ProximalAdagrad", dtype_order: 1, parameter_order: 4, name: "l1_1", dtype : "float", default : "0.0"});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.nn.ProximalAdagrad", parameter_order: 5, name: "l2", dtype_num: 1, dtype: "float", optional: "False", default: "0.0"});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.nn.ProximalAdagrad", dtype_order: 1, parameter_order: 5, name: "l2_1", dtype : "float", default : "0.0"});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.nn.ProximalAdagrad", parameter_order: 6, name: "use_locking", dtype_num: 1, dtype: "bool", optional: "False", default: "False"});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.nn.ProximalAdagrad", dtype_order: 1, parameter_order: 6, name: "use_locking_1", dtype : "bool", default : "False"});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.nn.ProximalAdagrad", parameter_order: 7, name: "loss_scale", dtype_num: 1, dtype: "float", optional: "False", default: "1.0"});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.nn.ProximalAdagrad", dtype_order: 1, parameter_order: 7, name: "loss_scale_1", dtype : "float", default : "1.0"});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.nn.ProximalAdagrad", parameter_order: 8, name: "weight_decay", dtype_num: 1, dtype: "Union[float, int, Cell]", optional: "False", default: "0.0"});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.nn.ProximalAdagrad", dtype_order: 1, parameter_order: 8, name: "weight_decay_1", dtype : "Union[float, int, Cell]", default : "0.0"});
merge (: input {framework: "mindspore", version: "2.0", operator: "mindspore.nn.ProximalAdagrad", input_order: 1, name: "grads", dtype_num: 1, dtype: "tuple[Tensor]", optional: "False", default: "['']"});
merge (: childInput  { framework: "mindspore", version: "2.0", operator: "mindspore.nn.ProximalAdagrad", dtype_order: 1, inputs_order: 1, name: "grads_1", dtype : "tuple[Tensor]", default : "['']"});
merge (: return {framework: "mindspore", version: "2.0", operator: "mindspore.nn.ProximalAdagrad", return_order: 1, name: "return", dtype: 0});
match
 (m11: operator {framework: "mindspore", full_name: "mindspore.nn.ProximalAdagrad", version: "2.0"}),
 (n11: parameter)
where n11.operator = 'mindspore.nn.ProximalAdagrad' and n11.framework = 'mindspore' and n11.version = '2.0'
merge (m11) -[: parameterOfOperator {parameter_order: n11.parameter_order, name: n11.name}] -> (n11);
match
 (m11: operator {framework: "mindspore", full_name: "mindspore.nn.ProximalAdagrad", version: "2.0"}),
 (n11: input)
where n11.operator = 'mindspore.nn.ProximalAdagrad' and n11.framework = 'mindspore' and n11.version = '2.0'
merge (m11) -[: inputOfOperator {input_order: n11.input_order, name: n11.name}] -> (n11);
match
 (m11: operator {framework: "mindspore", full_name: "mindspore.nn.ProximalAdagrad", version: "2.0"}),
 (n11: return)
where n11.operator = 'mindspore.nn.ProximalAdagrad' and n11.framework = 'mindspore' and n11.version = '2.0'
merge (m11) -[: returnOfOperator {return_order: n11.return_order, name: n11.name}] -> (n11);
match
 (m11: parameter {framework: "mindspore", version: "2.0"}),
 (n11: childParameter {framework: "mindspore", version: "2.0"})
where n11.operator = 'mindspore.nn.ProximalAdagrad' and m11.operator='mindspore.nn.ProximalAdagrad' and n11.parameter_order=m11.parameter_order
merge (m11) -[: oneOfParameter {dtype_order: n11.dtype_order, dtype: n11.dtype}] -> (n11);
match
 (m11: input {framework: "mindspore", version: "2.0"}),
 (n11: childInput {framework: "mindspore", version: "2.0"})
where n11.operator = 'mindspore.nn.ProximalAdagrad' and m11.operator='mindspore.nn.ProximalAdagrad' and n11.input_order=m11.input_order
merge (m11) -[: oneOfInput {dtype_order: n11.dtype_order, dtype: n11.dtype}] -> (n11);
match
 (m11: return {framework: "mindspore", version: "2.0"}),
 (n11: childReturn {framework: "mindspore", version: "2.0"})
where n11.operator = 'mindspore.nn.ProximalAdagrad' and m11.operator='mindspore.nn.ProximalAdagrad' and n11.return_order=m11.return_order
merge (m11) -[: oneOfReturn {dtype_order: n11.dtype_order, dtype: n11.dtype}] -> (n11);

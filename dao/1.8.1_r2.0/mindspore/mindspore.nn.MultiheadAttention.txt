merge (: framework {name: "mindspore", version: "2.0"});
merge (: module {framework: "mindspore", name: "mindspore", version: "2.0"});
match
 (m1: framework {name: "mindspore", version: "2.0"}),
 (m2: module {framework: "mindspore", name: "mindspore", version: "2.0"})
merge (m1) -[: classOfFramework {name: "mindspore"}]-> (m2);
merge (: module {framework: "mindspore", name: "nn", version: "2.0"});
match
 (m1: module {framework: "mindspore", name: "mindspore", version: "2.0"}),
 (m2: module {framework: "mindspore", name: "nn", version: "2.0"})
merge (m1) -[: subClassOfClass {name: "nn"}]-> (m2);
merge (: operator {framework: "mindspore", name: "MultiheadAttention", full_name: "mindspore.nn.MultiheadAttention", version: "2.0"});
match
 (m3: module {framework: "mindspore", name: "nn", version: "2.0"}),
 (m4: operator {framework: "mindspore", name: "MultiheadAttention", full_name: "mindspore.nn.MultiheadAttention", version: "2.0"})
merge (m3) -[: operatorOfClass {name: "MultiheadAttention"}]-> (m4);
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.nn.MultiheadAttention", parameter_order: 1, name: "embed_dim", dtype_num: 1, dtype: "int", optional: "False", default: ""});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.nn.MultiheadAttention", dtype_order: 1, parameter_order: 1, name: "embed_dim_1", dtype : "int", default : ""});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.nn.MultiheadAttention", parameter_order: 2, name: "num_heads", dtype_num: 1, dtype: "int", optional: "False", default: ""});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.nn.MultiheadAttention", dtype_order: 1, parameter_order: 2, name: "num_heads_1", dtype : "int", default : ""});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.nn.MultiheadAttention", parameter_order: 3, name: "dropout", dtype_num: 1, dtype: "float", optional: "False", default: "0.0"});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.nn.MultiheadAttention", dtype_order: 1, parameter_order: 3, name: "dropout_1", dtype : "float", default : "0.0"});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.nn.MultiheadAttention", parameter_order: 4, name: "has_bias", dtype_num: 1, dtype: "bool", optional: "False", default: "True"});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.nn.MultiheadAttention", dtype_order: 1, parameter_order: 4, name: "has_bias_1", dtype : "bool", default : "True"});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.nn.MultiheadAttention", parameter_order: 5, name: "add_bias_kv", dtype_num: 1, dtype: "bool", optional: "False", default: "False"});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.nn.MultiheadAttention", dtype_order: 1, parameter_order: 5, name: "add_bias_kv_1", dtype : "bool", default : "False"});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.nn.MultiheadAttention", parameter_order: 6, name: "add_zero_attn", dtype_num: 1, dtype: "bool", optional: "False", default: "False"});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.nn.MultiheadAttention", dtype_order: 1, parameter_order: 6, name: "add_zero_attn_1", dtype : "bool", default : "False"});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.nn.MultiheadAttention", parameter_order: 7, name: "kdim", dtype_num: 1, dtype: "int", optional: "False", default: "None"});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.nn.MultiheadAttention", dtype_order: 1, parameter_order: 7, name: "kdim_1", dtype : "int", default : "None"});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.nn.MultiheadAttention", parameter_order: 8, name: "vdim", dtype_num: 1, dtype: "int", optional: "False", default: "None"});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.nn.MultiheadAttention", dtype_order: 1, parameter_order: 8, name: "vdim_1", dtype : "int", default : "None"});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.nn.MultiheadAttention", parameter_order: 9, name: "batch_first", dtype_num: 1, dtype: "bool", optional: "False", default: "False"});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.nn.MultiheadAttention", dtype_order: 1, parameter_order: 9, name: "batch_first_1", dtype : "bool", default : "False"});
merge (: input {framework: "mindspore", version: "2.0", operator: "mindspore.nn.MultiheadAttention", input_order: 1, name: "query", dtype_num: 1, dtype: "Tensor", optional: "False", default: "['']"});
merge (: childInput  { framework: "mindspore", version: "2.0", operator: "mindspore.nn.MultiheadAttention", dtype_order: 1, inputs_order: 1, name: "query_1", dtype : "Tensor", default : "['']"});
merge (: input {framework: "mindspore", version: "2.0", operator: "mindspore.nn.MultiheadAttention", input_order: 2, name: "key", dtype_num: 1, dtype: "Tensor", optional: "False", default: "['']"});
merge (: childInput  { framework: "mindspore", version: "2.0", operator: "mindspore.nn.MultiheadAttention", dtype_order: 1, inputs_order: 2, name: "key_1", dtype : "Tensor", default : "['']"});
merge (: input {framework: "mindspore", version: "2.0", operator: "mindspore.nn.MultiheadAttention", input_order: 3, name: "value", dtype_num: 1, dtype: "Tensor", optional: "False", default: "['']"});
merge (: childInput  { framework: "mindspore", version: "2.0", operator: "mindspore.nn.MultiheadAttention", dtype_order: 1, inputs_order: 3, name: "value_1", dtype : "Tensor", default : "['']"});
merge (: input {framework: "mindspore", version: "2.0", operator: "mindspore.nn.MultiheadAttention", input_order: 4, name: "key_padding_mask", dtype_num: 1, dtype: "Tensor, optional", optional: "False", default: "['None']"});
merge (: childInput  { framework: "mindspore", version: "2.0", operator: "mindspore.nn.MultiheadAttention", dtype_order: 1, inputs_order: 4, name: "key_padding_mask_1", dtype : "Tensor, optional", default : "['None']"});
merge (: input {framework: "mindspore", version: "2.0", operator: "mindspore.nn.MultiheadAttention", input_order: 5, name: "need_weights", dtype_num: 1, dtype: "bool", optional: "False", default: "['True']"});
merge (: childInput  { framework: "mindspore", version: "2.0", operator: "mindspore.nn.MultiheadAttention", dtype_order: 1, inputs_order: 5, name: "need_weights_1", dtype : "bool", default : "['True']"});
merge (: input {framework: "mindspore", version: "2.0", operator: "mindspore.nn.MultiheadAttention", input_order: 6, name: "attn_mask", dtype_num: 1, dtype: "Tensor, optional", optional: "False", default: "['None']"});
merge (: childInput  { framework: "mindspore", version: "2.0", operator: "mindspore.nn.MultiheadAttention", dtype_order: 1, inputs_order: 6, name: "attn_mask_1", dtype : "Tensor, optional", default : "['None']"});
merge (: input {framework: "mindspore", version: "2.0", operator: "mindspore.nn.MultiheadAttention", input_order: 7, name: "average_attn_weights", dtype_num: 1, dtype: "bool", optional: "False", default: "['True']"});
merge (: childInput  { framework: "mindspore", version: "2.0", operator: "mindspore.nn.MultiheadAttention", dtype_order: 1, inputs_order: 7, name: "average_attn_weights_1", dtype : "bool", default : "['True']"});
merge (: return {framework: "mindspore", version: "2.0", operator: "mindspore.nn.MultiheadAttention", return_order: 1, name: "return", dtype: 0});
match
 (m11: operator {framework: "mindspore", full_name: "mindspore.nn.MultiheadAttention", version: "2.0"}),
 (n11: parameter)
where n11.operator = 'mindspore.nn.MultiheadAttention' and n11.framework = 'mindspore' and n11.version = '2.0'
merge (m11) -[: parameterOfOperator {parameter_order: n11.parameter_order, name: n11.name}] -> (n11);
match
 (m11: operator {framework: "mindspore", full_name: "mindspore.nn.MultiheadAttention", version: "2.0"}),
 (n11: input)
where n11.operator = 'mindspore.nn.MultiheadAttention' and n11.framework = 'mindspore' and n11.version = '2.0'
merge (m11) -[: inputOfOperator {input_order: n11.input_order, name: n11.name}] -> (n11);
match
 (m11: operator {framework: "mindspore", full_name: "mindspore.nn.MultiheadAttention", version: "2.0"}),
 (n11: return)
where n11.operator = 'mindspore.nn.MultiheadAttention' and n11.framework = 'mindspore' and n11.version = '2.0'
merge (m11) -[: returnOfOperator {return_order: n11.return_order, name: n11.name}] -> (n11);
match
 (m11: parameter {framework: "mindspore", version: "2.0"}),
 (n11: childParameter {framework: "mindspore", version: "2.0"})
where n11.operator = 'mindspore.nn.MultiheadAttention' and m11.operator='mindspore.nn.MultiheadAttention' and n11.parameter_order=m11.parameter_order
merge (m11) -[: oneOfParameter {dtype_order: n11.dtype_order, dtype: n11.dtype}] -> (n11);
match
 (m11: input {framework: "mindspore", version: "2.0"}),
 (n11: childInput {framework: "mindspore", version: "2.0"})
where n11.operator = 'mindspore.nn.MultiheadAttention' and m11.operator='mindspore.nn.MultiheadAttention' and n11.input_order=m11.input_order
merge (m11) -[: oneOfInput {dtype_order: n11.dtype_order, dtype: n11.dtype}] -> (n11);
match
 (m11: return {framework: "mindspore", version: "2.0"}),
 (n11: childReturn {framework: "mindspore", version: "2.0"})
where n11.operator = 'mindspore.nn.MultiheadAttention' and m11.operator='mindspore.nn.MultiheadAttention' and n11.return_order=m11.return_order
merge (m11) -[: oneOfReturn {dtype_order: n11.dtype_order, dtype: n11.dtype}] -> (n11);

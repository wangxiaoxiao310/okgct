merge (: framework {name: "mindspore", version: "2.0"});
merge (: module {framework: "mindspore", name: "mindspore", version: "2.0"});
match
 (m1: framework {name: "mindspore", version: "2.0"}),
 (m2: module {framework: "mindspore", name: "mindspore", version: "2.0"})
merge (m1) -[: classOfFramework {name: "mindspore"}]-> (m2);
merge (: module {framework: "mindspore", name: "nn", version: "2.0"});
match
 (m1: module {framework: "mindspore", name: "mindspore", version: "2.0"}),
 (m2: module {framework: "mindspore", name: "nn", version: "2.0"})
merge (m1) -[: subClassOfClass {name: "nn"}]-> (m2);
merge (: operator {framework: "mindspore", name: "SyncBatchNorm", full_name: "mindspore.nn.SyncBatchNorm", version: "2.0"});
match
 (m3: module {framework: "mindspore", name: "nn", version: "2.0"}),
 (m4: operator {framework: "mindspore", name: "SyncBatchNorm", full_name: "mindspore.nn.SyncBatchNorm", version: "2.0"})
merge (m3) -[: operatorOfClass {name: "SyncBatchNorm"}]-> (m4);
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.nn.SyncBatchNorm", parameter_order: 1, name: "num_features", dtype_num: 1, dtype: "int", optional: "False", default: ""});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.nn.SyncBatchNorm", dtype_order: 1, parameter_order: 1, name: "num_features_1", dtype : "int", default : ""});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.nn.SyncBatchNorm", parameter_order: 2, name: "eps", dtype_num: 1, dtype: "float", optional: "False", default: "1e"});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.nn.SyncBatchNorm", dtype_order: 1, parameter_order: 2, name: "eps_1", dtype : "float", default : "1e"});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.nn.SyncBatchNorm", parameter_order: 3, name: "momentum", dtype_num: 1, dtype: "float", optional: "False", default: "0.9"});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.nn.SyncBatchNorm", dtype_order: 1, parameter_order: 3, name: "momentum_1", dtype : "float", default : "0.9"});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.nn.SyncBatchNorm", parameter_order: 4, name: "affine", dtype_num: 1, dtype: "bool", optional: "False", default: "True"});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.nn.SyncBatchNorm", dtype_order: 1, parameter_order: 4, name: "affine_1", dtype : "bool", default : "True"});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.nn.SyncBatchNorm", parameter_order: 5, name: "gamma_init", dtype_num: 1, dtype: "Union[Tensor, str, Initializer, numbers.Number]", optional: "False", default: "ones"});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.nn.SyncBatchNorm", dtype_order: 1, parameter_order: 5, name: "gamma_init_1", dtype : "Union[Tensor, str, Initializer, numbers.Number]", default : "ones"});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.nn.SyncBatchNorm", parameter_order: 6, name: "beta_init", dtype_num: 1, dtype: "Union[Tensor, str, Initializer, numbers.Number]", optional: "False", default: "zeros"});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.nn.SyncBatchNorm", dtype_order: 1, parameter_order: 6, name: "beta_init_1", dtype : "Union[Tensor, str, Initializer, numbers.Number]", default : "zeros"});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.nn.SyncBatchNorm", parameter_order: 7, name: "moving_mean_init", dtype_num: 1, dtype: "Union[Tensor, str, Initializer, numbers.Number]", optional: "False", default: "zeros"});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.nn.SyncBatchNorm", dtype_order: 1, parameter_order: 7, name: "moving_mean_init_1", dtype : "Union[Tensor, str, Initializer, numbers.Number]", default : "zeros"});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.nn.SyncBatchNorm", parameter_order: 8, name: "moving_var_init", dtype_num: 1, dtype: "Union[Tensor, str, Initializer, numbers.Number]", optional: "False", default: "ones"});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.nn.SyncBatchNorm", dtype_order: 1, parameter_order: 8, name: "moving_var_init_1", dtype : "Union[Tensor, str, Initializer, numbers.Number]", default : "ones"});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.nn.SyncBatchNorm", parameter_order: 9, name: "use_batch_statistics", dtype_num: 1, dtype: "bool", optional: "False", default: "None"});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.nn.SyncBatchNorm", dtype_order: 1, parameter_order: 9, name: "use_batch_statistics_1", dtype : "bool", default : "None"});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.nn.SyncBatchNorm", parameter_order: 10, name: "process_groups", dtype_num: 1, dtype: "list", optional: "False", default: "None"});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.nn.SyncBatchNorm", dtype_order: 1, parameter_order: 10, name: "process_groups_1", dtype : "list", default : "None"});
merge (: input {framework: "mindspore", version: "2.0", operator: "mindspore.nn.SyncBatchNorm", input_order: 1, name: "x", dtype_num: 1, dtype: " （Tensor） ", optional: "False", default: "['']"});
merge (: childInput  { framework: "mindspore", version: "2.0", operator: "mindspore.nn.SyncBatchNorm", dtype_order: 1, inputs_order: 1, name: "x_1", dtype : " （Tensor） ", default : "['']"});
merge (: return {framework: "mindspore", version: "2.0", operator: "mindspore.nn.SyncBatchNorm", return_order: 1, name: "return", dtype: 0});
match
 (m11: operator {framework: "mindspore", full_name: "mindspore.nn.SyncBatchNorm", version: "2.0"}),
 (n11: parameter)
where n11.operator = 'mindspore.nn.SyncBatchNorm' and n11.framework = 'mindspore' and n11.version = '2.0'
merge (m11) -[: parameterOfOperator {parameter_order: n11.parameter_order, name: n11.name}] -> (n11);
match
 (m11: operator {framework: "mindspore", full_name: "mindspore.nn.SyncBatchNorm", version: "2.0"}),
 (n11: input)
where n11.operator = 'mindspore.nn.SyncBatchNorm' and n11.framework = 'mindspore' and n11.version = '2.0'
merge (m11) -[: inputOfOperator {input_order: n11.input_order, name: n11.name}] -> (n11);
match
 (m11: operator {framework: "mindspore", full_name: "mindspore.nn.SyncBatchNorm", version: "2.0"}),
 (n11: return)
where n11.operator = 'mindspore.nn.SyncBatchNorm' and n11.framework = 'mindspore' and n11.version = '2.0'
merge (m11) -[: returnOfOperator {return_order: n11.return_order, name: n11.name}] -> (n11);
match
 (m11: parameter {framework: "mindspore", version: "2.0"}),
 (n11: childParameter {framework: "mindspore", version: "2.0"})
where n11.operator = 'mindspore.nn.SyncBatchNorm' and m11.operator='mindspore.nn.SyncBatchNorm' and n11.parameter_order=m11.parameter_order
merge (m11) -[: oneOfParameter {dtype_order: n11.dtype_order, dtype: n11.dtype}] -> (n11);
match
 (m11: input {framework: "mindspore", version: "2.0"}),
 (n11: childInput {framework: "mindspore", version: "2.0"})
where n11.operator = 'mindspore.nn.SyncBatchNorm' and m11.operator='mindspore.nn.SyncBatchNorm' and n11.input_order=m11.input_order
merge (m11) -[: oneOfInput {dtype_order: n11.dtype_order, dtype: n11.dtype}] -> (n11);
match
 (m11: return {framework: "mindspore", version: "2.0"}),
 (n11: childReturn {framework: "mindspore", version: "2.0"})
where n11.operator = 'mindspore.nn.SyncBatchNorm' and m11.operator='mindspore.nn.SyncBatchNorm' and n11.return_order=m11.return_order
merge (m11) -[: oneOfReturn {dtype_order: n11.dtype_order, dtype: n11.dtype}] -> (n11);

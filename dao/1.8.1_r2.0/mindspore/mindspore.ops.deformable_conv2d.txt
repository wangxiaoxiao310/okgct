merge (: framework {name: "mindspore", version: "2.0"});
merge (: module {framework: "mindspore", name: "mindspore", version: "2.0"});
match
 (m1: framework {name: "mindspore", version: "2.0"}),
 (m2: module {framework: "mindspore", name: "mindspore", version: "2.0"})
merge (m1) -[: classOfFramework {name: "mindspore"}]-> (m2);
merge (: module {framework: "mindspore", name: "ops", version: "2.0"});
match
 (m1: module {framework: "mindspore", name: "mindspore", version: "2.0"}),
 (m2: module {framework: "mindspore", name: "ops", version: "2.0"})
merge (m1) -[: subClassOfClass {name: "ops"}]-> (m2);
merge (: operator {framework: "mindspore", name: "deformable_conv2d", full_name: "mindspore.ops.deformable_conv2d", version: "2.0"});
match
 (m3: module {framework: "mindspore", name: "ops", version: "2.0"}),
 (m4: operator {framework: "mindspore", name: "deformable_conv2d", full_name: "mindspore.ops.deformable_conv2d", version: "2.0"})
merge (m3) -[: operatorOfClass {name: "deformable_conv2d"}]-> (m4);
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.ops.deformable_conv2d", parameter_order: 1, name: "x", dtype_num: 1, dtype: "Tensor", optional: "False", default: ""});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.ops.deformable_conv2d", dtype_order: 1, parameter_order: 1, name: "x_1", dtype : "Tensor", default : ""});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.ops.deformable_conv2d", parameter_order: 2, name: "weight", dtype_num: 1, dtype: "Tensor", optional: "False", default: ""});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.ops.deformable_conv2d", dtype_order: 1, parameter_order: 2, name: "weight_1", dtype : "Tensor", default : ""});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.ops.deformable_conv2d", parameter_order: 3, name: "offsets", dtype_num: 1, dtype: "Tensor", optional: "False", default: ""});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.ops.deformable_conv2d", dtype_order: 1, parameter_order: 3, name: "offsets_1", dtype : "Tensor", default : ""});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.ops.deformable_conv2d", parameter_order: 4, name: "kernel_size", dtype_num: 1, dtype: "tuple[int]", optional: "False", default: ""});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.ops.deformable_conv2d", dtype_order: 1, parameter_order: 4, name: "kernel_size_1", dtype : "tuple[int]", default : ""});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.ops.deformable_conv2d", parameter_order: 5, name: "strides", dtype_num: 1, dtype: "tuple[int]", optional: "False", default: ""});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.ops.deformable_conv2d", dtype_order: 1, parameter_order: 5, name: "strides_1", dtype : "tuple[int]", default : ""});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.ops.deformable_conv2d", parameter_order: 6, name: "padding", dtype_num: 1, dtype: "tuple[int]", optional: "False", default: ""});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.ops.deformable_conv2d", dtype_order: 1, parameter_order: 6, name: "padding_1", dtype : "tuple[int]", default : ""});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.ops.deformable_conv2d", parameter_order: 7, name: "bias", dtype_num: 1, dtype: "Tensor", optional: "True", default: ""});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.ops.deformable_conv2d", dtype_order: 1, parameter_order: 7, name: "bias_1", dtype : "Tensor", default : ""});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.ops.deformable_conv2d", parameter_order: 8, name: "dilations", dtype_num: 1, dtype: "tuple[int]", optional: "True", default: ""});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.ops.deformable_conv2d", dtype_order: 1, parameter_order: 8, name: "dilations_1", dtype : "tuple[int]", default : ""});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.ops.deformable_conv2d", parameter_order: 9, name: "groups", dtype_num: 1, dtype: "int", optional: "True", default: ""});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.ops.deformable_conv2d", dtype_order: 1, parameter_order: 9, name: "groups_1", dtype : "int", default : ""});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.ops.deformable_conv2d", parameter_order: 10, name: "deformable_groups", dtype_num: 1, dtype: "int", optional: "True", default: ""});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.ops.deformable_conv2d", dtype_order: 1, parameter_order: 10, name: "deformable_groups_1", dtype : "int", default : ""});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.ops.deformable_conv2d", parameter_order: 11, name: "modulated", dtype_num: 1, dtype: "bool", optional: "True", default: ""});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.ops.deformable_conv2d", dtype_order: 1, parameter_order: 11, name: "modulated_1", dtype : "bool", default : ""});
merge (: return {framework: "mindspore", version: "2.0", operator: "mindspore.ops.deformable_conv2d", return_order: 1, name: "return", dtype: 1});
merge (: childReturn {framework: "mindspore", version: "2.0", operator: "mindspore.ops.deformable_conv2d", dtype_order: 1, return_order: 1, name: "return_1", dtype: "Tensor"});
match
 (m11: operator {framework: "mindspore", full_name: "mindspore.ops.deformable_conv2d", version: "2.0"}),
 (n11: parameter)
where n11.operator = 'mindspore.ops.deformable_conv2d' and n11.framework = 'mindspore' and n11.version = '2.0'
merge (m11) -[: parameterOfOperator {parameter_order: n11.parameter_order, name: n11.name}] -> (n11);
match
 (m11: operator {framework: "mindspore", full_name: "mindspore.ops.deformable_conv2d", version: "2.0"}),
 (n11: input)
where n11.operator = 'mindspore.ops.deformable_conv2d' and n11.framework = 'mindspore' and n11.version = '2.0'
merge (m11) -[: inputOfOperator {input_order: n11.input_order, name: n11.name}] -> (n11);
match
 (m11: operator {framework: "mindspore", full_name: "mindspore.ops.deformable_conv2d", version: "2.0"}),
 (n11: return)
where n11.operator = 'mindspore.ops.deformable_conv2d' and n11.framework = 'mindspore' and n11.version = '2.0'
merge (m11) -[: returnOfOperator {return_order: n11.return_order, name: n11.name}] -> (n11);
match
 (m11: parameter {framework: "mindspore", version: "2.0"}),
 (n11: childParameter {framework: "mindspore", version: "2.0"})
where n11.operator = 'mindspore.ops.deformable_conv2d' and m11.operator='mindspore.ops.deformable_conv2d' and n11.parameter_order=m11.parameter_order
merge (m11) -[: oneOfParameter {dtype_order: n11.dtype_order, dtype: n11.dtype}] -> (n11);
match
 (m11: input {framework: "mindspore", version: "2.0"}),
 (n11: childInput {framework: "mindspore", version: "2.0"})
where n11.operator = 'mindspore.ops.deformable_conv2d' and m11.operator='mindspore.ops.deformable_conv2d' and n11.input_order=m11.input_order
merge (m11) -[: oneOfInput {dtype_order: n11.dtype_order, dtype: n11.dtype}] -> (n11);
match
 (m11: return {framework: "mindspore", version: "2.0"}),
 (n11: childReturn {framework: "mindspore", version: "2.0"})
where n11.operator = 'mindspore.ops.deformable_conv2d' and m11.operator='mindspore.ops.deformable_conv2d' and n11.return_order=m11.return_order
merge (m11) -[: oneOfReturn {dtype_order: n11.dtype_order, dtype: n11.dtype}] -> (n11);

merge (: framework {name: "mindspore", version: "2.0"});
merge (: module {framework: "mindspore", name: "mindspore", version: "2.0"});
match
 (m1: framework {name: "mindspore", version: "2.0"}),
 (m2: module {framework: "mindspore", name: "mindspore", version: "2.0"})
merge (m1) -[: classOfFramework {name: "mindspore"}]-> (m2);
merge (: module {framework: "mindspore", name: "nn", version: "2.0"});
match
 (m1: module {framework: "mindspore", name: "mindspore", version: "2.0"}),
 (m2: module {framework: "mindspore", name: "nn", version: "2.0"})
merge (m1) -[: subClassOfClass {name: "nn"}]-> (m2);
merge (: operator {framework: "mindspore", name: "MultiFieldEmbeddingLookup", full_name: "mindspore.nn.MultiFieldEmbeddingLookup", version: "2.0"});
match
 (m3: module {framework: "mindspore", name: "nn", version: "2.0"}),
 (m4: operator {framework: "mindspore", name: "MultiFieldEmbeddingLookup", full_name: "mindspore.nn.MultiFieldEmbeddingLookup", version: "2.0"})
merge (m3) -[: operatorOfClass {name: "MultiFieldEmbeddingLookup"}]-> (m4);
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.nn.MultiFieldEmbeddingLookup", parameter_order: 1, name: "vocab_size", dtype_num: 1, dtype: "int", optional: "False", default: ""});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.nn.MultiFieldEmbeddingLookup", dtype_order: 1, parameter_order: 1, name: "vocab_size_1", dtype : "int", default : ""});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.nn.MultiFieldEmbeddingLookup", parameter_order: 2, name: "embedding_size", dtype_num: 1, dtype: "int", optional: "False", default: ""});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.nn.MultiFieldEmbeddingLookup", dtype_order: 1, parameter_order: 2, name: "embedding_size_1", dtype : "int", default : ""});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.nn.MultiFieldEmbeddingLookup", parameter_order: 3, name: "field_size", dtype_num: 1, dtype: "int", optional: "False", default: ""});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.nn.MultiFieldEmbeddingLookup", dtype_order: 1, parameter_order: 3, name: "field_size_1", dtype : "int", default : ""});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.nn.MultiFieldEmbeddingLookup", parameter_order: 4, name: "param_init", dtype_num: 1, dtype: "Union[Tensor, str, Initializer, numbers.Number]", optional: "False", default: "normal"});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.nn.MultiFieldEmbeddingLookup", dtype_order: 1, parameter_order: 4, name: "param_init_1", dtype : "Union[Tensor, str, Initializer, numbers.Number]", default : "normal"});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.nn.MultiFieldEmbeddingLookup", parameter_order: 5, name: "target", dtype_num: 1, dtype: "str", optional: "False", default: "CPU"});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.nn.MultiFieldEmbeddingLookup", dtype_order: 1, parameter_order: 5, name: "target_1", dtype : "str", default : "CPU"});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.nn.MultiFieldEmbeddingLookup", parameter_order: 6, name: "slice_mode", dtype_num: 1, dtype: "str", optional: "False", default: "batch_slice"});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.nn.MultiFieldEmbeddingLookup", dtype_order: 1, parameter_order: 6, name: "slice_mode_1", dtype : "str", default : "batch_slice"});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.nn.MultiFieldEmbeddingLookup", parameter_order: 7, name: "feature_num_list", dtype_num: 1, dtype: "tuple", optional: "False", default: "None"});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.nn.MultiFieldEmbeddingLookup", dtype_order: 1, parameter_order: 7, name: "feature_num_list_1", dtype : "tuple", default : "None"});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.nn.MultiFieldEmbeddingLookup", parameter_order: 8, name: "max_norm", dtype_num: 1, dtype: "Union[float, None]", optional: "False", default: "None"});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.nn.MultiFieldEmbeddingLookup", dtype_order: 1, parameter_order: 8, name: "max_norm_1", dtype : "Union[float, None]", default : "None"});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.nn.MultiFieldEmbeddingLookup", parameter_order: 9, name: "sparse", dtype_num: 1, dtype: "bool", optional: "False", default: "True"});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.nn.MultiFieldEmbeddingLookup", dtype_order: 1, parameter_order: 9, name: "sparse_1", dtype : "bool", default : "True"});
merge (: parameter {framework: "mindspore", version: "2.0", operator: "mindspore.nn.MultiFieldEmbeddingLookup", parameter_order: 10, name: "operator", dtype_num: 1, dtype: "str", optional: "False", default: "SUM"});
merge (: childParameter  { framework: "mindspore", version: "2.0", operator: "mindspore.nn.MultiFieldEmbeddingLookup", dtype_order: 1, parameter_order: 10, name: "operator_1", dtype : "str", default : "SUM"});
merge (: input {framework: "mindspore", version: "2.0", operator: "mindspore.nn.MultiFieldEmbeddingLookup", input_order: 1, name: "input_indices", dtype_num: 1, dtype: "Tensor", optional: "False", default: "['']"});
merge (: childInput  { framework: "mindspore", version: "2.0", operator: "mindspore.nn.MultiFieldEmbeddingLookup", dtype_order: 1, inputs_order: 1, name: "input_indices_1", dtype : "Tensor", default : "['']"});
merge (: input {framework: "mindspore", version: "2.0", operator: "mindspore.nn.MultiFieldEmbeddingLookup", input_order: 2, name: "input_values", dtype_num: 1, dtype: "Tensor", optional: "False", default: "['']"});
merge (: childInput  { framework: "mindspore", version: "2.0", operator: "mindspore.nn.MultiFieldEmbeddingLookup", dtype_order: 1, inputs_order: 2, name: "input_values_1", dtype : "Tensor", default : "['']"});
merge (: input {framework: "mindspore", version: "2.0", operator: "mindspore.nn.MultiFieldEmbeddingLookup", input_order: 3, name: "field_ids", dtype_num: 1, dtype: "Tensor", optional: "False", default: "['']"});
merge (: childInput  { framework: "mindspore", version: "2.0", operator: "mindspore.nn.MultiFieldEmbeddingLookup", dtype_order: 1, inputs_order: 3, name: "field_ids_1", dtype : "Tensor", default : "['']"});
merge (: return {framework: "mindspore", version: "2.0", operator: "mindspore.nn.MultiFieldEmbeddingLookup", return_order: 1, name: "return", dtype: 0});
match
 (m11: operator {framework: "mindspore", full_name: "mindspore.nn.MultiFieldEmbeddingLookup", version: "2.0"}),
 (n11: parameter)
where n11.operator = 'mindspore.nn.MultiFieldEmbeddingLookup' and n11.framework = 'mindspore' and n11.version = '2.0'
merge (m11) -[: parameterOfOperator {parameter_order: n11.parameter_order, name: n11.name}] -> (n11);
match
 (m11: operator {framework: "mindspore", full_name: "mindspore.nn.MultiFieldEmbeddingLookup", version: "2.0"}),
 (n11: input)
where n11.operator = 'mindspore.nn.MultiFieldEmbeddingLookup' and n11.framework = 'mindspore' and n11.version = '2.0'
merge (m11) -[: inputOfOperator {input_order: n11.input_order, name: n11.name}] -> (n11);
match
 (m11: operator {framework: "mindspore", full_name: "mindspore.nn.MultiFieldEmbeddingLookup", version: "2.0"}),
 (n11: return)
where n11.operator = 'mindspore.nn.MultiFieldEmbeddingLookup' and n11.framework = 'mindspore' and n11.version = '2.0'
merge (m11) -[: returnOfOperator {return_order: n11.return_order, name: n11.name}] -> (n11);
match
 (m11: parameter {framework: "mindspore", version: "2.0"}),
 (n11: childParameter {framework: "mindspore", version: "2.0"})
where n11.operator = 'mindspore.nn.MultiFieldEmbeddingLookup' and m11.operator='mindspore.nn.MultiFieldEmbeddingLookup' and n11.parameter_order=m11.parameter_order
merge (m11) -[: oneOfParameter {dtype_order: n11.dtype_order, dtype: n11.dtype}] -> (n11);
match
 (m11: input {framework: "mindspore", version: "2.0"}),
 (n11: childInput {framework: "mindspore", version: "2.0"})
where n11.operator = 'mindspore.nn.MultiFieldEmbeddingLookup' and m11.operator='mindspore.nn.MultiFieldEmbeddingLookup' and n11.input_order=m11.input_order
merge (m11) -[: oneOfInput {dtype_order: n11.dtype_order, dtype: n11.dtype}] -> (n11);
match
 (m11: return {framework: "mindspore", version: "2.0"}),
 (n11: childReturn {framework: "mindspore", version: "2.0"})
where n11.operator = 'mindspore.nn.MultiFieldEmbeddingLookup' and m11.operator='mindspore.nn.MultiFieldEmbeddingLookup' and n11.return_order=m11.return_order
merge (m11) -[: oneOfReturn {dtype_order: n11.dtype_order, dtype: n11.dtype}] -> (n11);

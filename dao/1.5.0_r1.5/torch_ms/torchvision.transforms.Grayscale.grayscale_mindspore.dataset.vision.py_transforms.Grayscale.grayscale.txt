match
 (m1: operator {full_name: "torchvision.transforms.Grayscale.grayscale", version: "1.5.0"}),
 (m2: operator {full_name: "mindspore.dataset.vision.py_transforms.Grayscale.grayscale", version: "1.5"})
merge (m1) -[: equivalentOperator {framework_name: "mindspore", type_judgement: "false"}]-> (m2) UNION
merge (m2) -[: equivalentOperator {framework_name: "pytorch", typeJudgement: "false"}]-> (m1);
match
 (m1: parameter {framework: "pytorch", operator: "torchvision.transforms.Grayscale.grayscale", name: "num_output_channels", version: "1.5.0"}),
 (m2: parameter {framework: "mindspore", operator: "mindspore.dataset.vision.py_transforms.Grayscale.grayscale", name: "num_output_channels", version: "1.5"})
merge (m1) -[: equivalentParameter { framework_name_first: "pytorch", framework_name_second: "mindspore", operator_name_first: "torchvision.transforms.Grayscale.grayscale", operator_name_second: "mindspore.dataset.vision.py_transforms.Grayscale.grayscale", parameter_name_first : "num_output_channels", parameter_name_second : "num_output_channels"}]-> (m2);
match
 (m1: return {framework: "pytorch", operator: "torchvision.transforms.Grayscale.grayscale", return_order: 1, version: "1.5.0"}),
 (m2: return {framework: "mindspore", operator: "mindspore.dataset.vision.py_transforms.Grayscale.grayscale", return_order: 1, version: "1.5"})
merge (m1) -[: equivalentReturn { framework_name_first: "pytorch", framework_name_second: "mindspore", operator_name_first: "torchvision.transforms.Grayscale.grayscale", operator_name_second: "mindspore.dataset.vision.py_transforms.Grayscale.grayscale", return_order_first : 1, return_order_second : 1}]-> (m2);

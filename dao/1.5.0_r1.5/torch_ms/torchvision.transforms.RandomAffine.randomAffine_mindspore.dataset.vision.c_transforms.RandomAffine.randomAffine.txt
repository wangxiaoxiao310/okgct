match
 (m1: operator {full_name: "torchvision.transforms.RandomAffine.randomAffine", version: "1.5.0"}),
 (m2: operator {full_name: "mindspore.dataset.vision.c_transforms.RandomAffine.randomAffine", version: "1.5"})
merge (m1) -[: equivalentOperator {framework_name: "mindspore", type_judgement: "false"}]-> (m2) UNION
merge (m2) -[: equivalentOperator {framework_name: "pytorch", typeJudgement: "false"}]-> (m1);
match
 (m1: return {framework: "pytorch", operator: "torchvision.transforms.RandomAffine.randomAffine", return_order: 1, version: "1.5.0"}),
 (m2: return {framework: "mindspore", operator: "mindspore.dataset.vision.c_transforms.RandomAffine.randomAffine", return_order: 1, version: "1.5"})
merge (m1) -[: equivalentReturn { framework_name_first: "pytorch", framework_name_second: "mindspore", operator_name_first: "torchvision.transforms.RandomAffine.randomAffine", operator_name_second: "mindspore.dataset.vision.c_transforms.RandomAffine.randomAffine", return_order_first : 1, return_order_second : 1}]-> (m2);

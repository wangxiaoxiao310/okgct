merge (: framework {name: "mindspore", version: "1.5"});
merge (: module {framework: "mindspore", name: "mindspore", version: "1.5"});
match
 (m1: framework {name: "mindspore", version: "1.5"}),
 (m2: module {framework: "mindspore", name: "mindspore", version: "1.5"})
merge (m1) -[: classOfFramework {name: "mindspore"}]-> (m2);
merge (: module {framework: "mindspore", name: "dataset", version: "1.5"});
match
 (m1: module {framework: "mindspore", name: "mindspore", version: "1.5"}),
 (m2: module {framework: "mindspore", name: "dataset", version: "1.5"})
merge (m1) -[: subClassOfClass {name: "dataset"}]-> (m2);
merge (: module {framework: "mindspore", name: "text", version: "1.5"});
match
 (m1: module {framework: "mindspore", name: "dataset", version: "1.5"}),
 (m2: module {framework: "mindspore", name: "text", version: "1.5"})
merge (m1) -[: subClassOfClass {name: "text"}]-> (m2);
merge (: module {framework: "mindspore", name: "transforms", version: "1.5"});
match
 (m1: module {framework: "mindspore", name: "text", version: "1.5"}),
 (m2: module {framework: "mindspore", name: "transforms", version: "1.5"})
merge (m1) -[: subClassOfClass {name: "transforms"}]-> (m2);
merge (: module {framework: "mindspore", name: "WhitespaceTokenizer", version: "1.5"});
match
 (m1: module {framework: "mindspore", name: "transforms", version: "1.5"}),
 (m2: module {framework: "mindspore", name: "WhitespaceTokenizer", version: "1.5"})
merge (m1) -[: subClassOfClass {name: "WhitespaceTokenizer"}]-> (m2);
merge (: operator {framework: "mindspore", name: "whitespaceTokenizer", full_name: "mindspore.dataset.text.transforms.WhitespaceTokenizer.whitespaceTokenizer", version: "1.5"});
match
 (m3: module {framework: "mindspore", name: "WhitespaceTokenizer", version: "1.5"}),
 (m4: operator {framework: "mindspore", name: "whitespaceTokenizer", full_name: "mindspore.dataset.text.transforms.WhitespaceTokenizer.whitespaceTokenizer", version: "1.5"})
merge (m3) -[: operatorOfClass {name: "whitespaceTokenizer"}]-> (m4);
merge (: parameter {framework: "mindspore", version: "1.5", operator: "mindspore.dataset.text.transforms.WhitespaceTokenizer.whitespaceTokenizer", parameter_order: 1, name: "with_offsets", dtype_num: 1, dtype: "bool", optional: "True", default: "False"});
merge (: childParameter  { framework: "mindspore", version: "1.5", operator: "mindspore.dataset.text.transforms.WhitespaceTokenizer.whitespaceTokenizer", dtype_order: 1, parameter_order: 1, name: "with_offsets_1", dtype : "bool", default : "False"});
merge (: return {framework: "mindspore", version: "1.5", operator: "mindspore.dataset.text.transforms.WhitespaceTokenizer.whitespaceTokenizer", return_order: 1, name: "return", dtype: 0});
match
 (m11: operator {framework: "mindspore", full_name: "mindspore.dataset.text.transforms.WhitespaceTokenizer.whitespaceTokenizer", version: "1.5"}),
 (n11: parameter)
where n11.operator = 'mindspore.dataset.text.transforms.WhitespaceTokenizer.whitespaceTokenizer' and n11.framework = 'mindspore' and n11.version = '1.5'
merge (m11) -[: parameterOfOperator {parameter_order: n11.parameter_order, name: n11.name}] -> (n11);
match
 (m11: operator {framework: "mindspore", full_name: "mindspore.dataset.text.transforms.WhitespaceTokenizer.whitespaceTokenizer", version: "1.5"}),
 (n11: return)
where n11.operator = 'mindspore.dataset.text.transforms.WhitespaceTokenizer.whitespaceTokenizer' and n11.framework = 'mindspore' and n11.version = '1.5'
merge (m11) -[: returnOfOperator {return_order: n11.return_order, name: n11.name}] -> (n11);
match
 (m11: parameter {framework: "mindspore", version: "1.5"}),
 (n11: childParameter {framework: "mindspore", version: "1.5"})
where n11.operator = 'mindspore.dataset.text.transforms.WhitespaceTokenizer.whitespaceTokenizer' and m11.operator='mindspore.dataset.text.transforms.WhitespaceTokenizer.whitespaceTokenizer' and n11.parameter_order=m11.parameter_order
merge (m11) -[: oneOfParameter {dtype_order: n11.dtype_order, dtype: n11.dtype}] -> (n11);
match
 (m11: return {framework: "mindspore", version: "1.5"}),
 (n11: childReturn {framework: "mindspore", version: "1.5"})
where n11.operator = 'mindspore.dataset.text.transforms.WhitespaceTokenizer.whitespaceTokenizer' and m11.operator='mindspore.dataset.text.transforms.WhitespaceTokenizer.whitespaceTokenizer' and n11.return_order=m11.return_order
merge (m11) -[: oneOfReturn {dtype_order: n11.dtype_order, dtype: n11.dtype}] -> (n11);

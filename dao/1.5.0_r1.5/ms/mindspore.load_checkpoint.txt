merge (: framework {name: "mindspore", version: "1.5"});
merge (: module {framework: "mindspore", name: "mindspore", version: "1.5"});
match
 (m1: framework {name: "mindspore", version: "1.5"}),
 (m2: module {framework: "mindspore", name: "mindspore", version: "1.5"})
merge (m1) -[: classOfFramework {name: "mindspore"}]-> (m2);
merge (: operator {framework: "mindspore", name: "load_checkpoint", full_name: "mindspore.load_checkpoint", version: "1.5"});
match
 (m3: module {framework: "mindspore", name: "mindspore", version: "1.5"}),
 (m4: operator {framework: "mindspore", name: "load_checkpoint", full_name: "mindspore.load_checkpoint", version: "1.5"})
merge (m3) -[: operatorOfClass {name: "load_checkpoint"}]-> (m4);
merge (: parameter {framework: "mindspore", version: "1.5", operator: "mindspore.load_checkpoint", parameter_order: 1, name: "ckpt_file_name", dtype_num: 1, dtype: "str", optional: "False", default: ""});
merge (: childParameter  { framework: "mindspore", version: "1.5", operator: "mindspore.load_checkpoint", dtype_order: 1, parameter_order: 1, name: "ckpt_file_name_1", dtype : "str", default : ""});
merge (: parameter {framework: "mindspore", version: "1.5", operator: "mindspore.load_checkpoint", parameter_order: 2, name: "net", dtype_num: 1, dtype: "Cell", optional: "True", default: "None"});
merge (: childParameter  { framework: "mindspore", version: "1.5", operator: "mindspore.load_checkpoint", dtype_order: 1, parameter_order: 2, name: "net_1", dtype : "Cell", default : "None"});
merge (: parameter {framework: "mindspore", version: "1.5", operator: "mindspore.load_checkpoint", parameter_order: 3, name: "strict_load", dtype_num: 1, dtype: "bool", optional: "True", default: "False"});
merge (: childParameter  { framework: "mindspore", version: "1.5", operator: "mindspore.load_checkpoint", dtype_order: 1, parameter_order: 3, name: "strict_load_1", dtype : "bool", default : "False"});
merge (: parameter {framework: "mindspore", version: "1.5", operator: "mindspore.load_checkpoint", parameter_order: 4, name: "filter_prefix", dtype_num: 3, dtype: "str", optional: "True", default: "None"});
merge (: childParameter  { framework: "mindspore", version: "1.5", operator: "mindspore.load_checkpoint", dtype_order: 1, parameter_order: 4, name: "filter_prefix_1", dtype : "str", default : "None"});
merge (: childParameter  { framework: "mindspore", version: "1.5", operator: "mindspore.load_checkpoint", dtype_order: 2, parameter_order: 4, name: "filter_prefix_2", dtype : "list", default : ""});
merge (: childParameter  { framework: "mindspore", version: "1.5", operator: "mindspore.load_checkpoint", dtype_order: 3, parameter_order: 4, name: "filter_prefix_3", dtype : "tuple", default : ""});
merge (: parameter {framework: "mindspore", version: "1.5", operator: "mindspore.load_checkpoint", parameter_order: 5, name: "dec_key", dtype_num: 2, dtype: "None", optional: "True", default: "None"});
merge (: childParameter  { framework: "mindspore", version: "1.5", operator: "mindspore.load_checkpoint", dtype_order: 1, parameter_order: 5, name: "dec_key_1", dtype : "None", default : "None"});
merge (: childParameter  { framework: "mindspore", version: "1.5", operator: "mindspore.load_checkpoint", dtype_order: 2, parameter_order: 5, name: "dec_key_2", dtype : "bytes", default : ""});
merge (: parameter {framework: "mindspore", version: "1.5", operator: "mindspore.load_checkpoint", parameter_order: 6, name: "dec_mode", dtype_num: 1, dtype: "str", optional: "True", default: "'AES-GCM'"});
merge (: childParameter  { framework: "mindspore", version: "1.5", operator: "mindspore.load_checkpoint", dtype_order: 1, parameter_order: 6, name: "dec_mode_1", dtype : "str", default : "'AES-GCM'"});
merge (: return {framework: "mindspore", version: "1.5", operator: "mindspore.load_checkpoint", return_order: 1, name: "return", dtype: 4});
merge (: childReturn {framework: "mindspore", version: "1.5", operator: "mindspore.load_checkpoint", dtype_order: 1, return_order: 1, name: "return_1", dtype: "d"});
merge (: childReturn {framework: "mindspore", version: "1.5", operator: "mindspore.load_checkpoint", dtype_order: 2, return_order: 1, name: "return_1", dtype: "i"});
merge (: childReturn {framework: "mindspore", version: "1.5", operator: "mindspore.load_checkpoint", dtype_order: 3, return_order: 1, name: "return_1", dtype: "c"});
merge (: childReturn {framework: "mindspore", version: "1.5", operator: "mindspore.load_checkpoint", dtype_order: 4, return_order: 1, name: "return_1", dtype: "t"});
match
 (m11: operator {framework: "mindspore", full_name: "mindspore.load_checkpoint", version: "1.5"}),
 (n11: parameter)
where n11.operator = 'mindspore.load_checkpoint' and n11.framework = 'mindspore' and n11.version = '1.5'
merge (m11) -[: parameterOfOperator {parameter_order: n11.parameter_order, name: n11.name}] -> (n11);
match
 (m11: operator {framework: "mindspore", full_name: "mindspore.load_checkpoint", version: "1.5"}),
 (n11: return)
where n11.operator = 'mindspore.load_checkpoint' and n11.framework = 'mindspore' and n11.version = '1.5'
merge (m11) -[: returnOfOperator {return_order: n11.return_order, name: n11.name}] -> (n11);
match
 (m11: parameter {framework: "mindspore", version: "1.5"}),
 (n11: childParameter {framework: "mindspore", version: "1.5"})
where n11.operator = 'mindspore.load_checkpoint' and m11.operator='mindspore.load_checkpoint' and n11.parameter_order=m11.parameter_order
merge (m11) -[: oneOfParameter {dtype_order: n11.dtype_order, dtype: n11.dtype}] -> (n11);
match
 (m11: return {framework: "mindspore", version: "1.5"}),
 (n11: childReturn {framework: "mindspore", version: "1.5"})
where n11.operator = 'mindspore.load_checkpoint' and m11.operator='mindspore.load_checkpoint' and n11.return_order=m11.return_order
merge (m11) -[: oneOfReturn {dtype_order: n11.dtype_order, dtype: n11.dtype}] -> (n11);
